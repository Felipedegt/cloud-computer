version: '3'
services:
  # Hasura
  hasura:
    image: hasura/graphql-engine:v1.0.0-beta.2
    ports:
    - "${HASURA_PORT}:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE}
      HASURA_GRAPHQL_ENABLE_TELEMETRY: ${HASURA_GRAPHQL_ENABLE_TELEMETRY}
      HASURA_GRAPHQL_CORS_DOMAIN: ${HASURA_GRAPHQL_CORS_DOMAIN}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_JWT_SECRET: "{\"type\":\"HS256\",\"key\":\"${JSON_SECRET}\"}"
    labels:
    - traefik.enable=true
    - traefik.frontend.rule=Host:hasura.webapp.$CLOUD_COMPUTER_HOST_DNS
    - traefik.port=8080
    links:
    - mail
    depends_on:
    - postgres
    - mail
  # Auth service
  auth:
    build:
      context: ./auth-service
      dockerfile: Dockerfile.dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      JSON_SECRET: ${JSON_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK: ${GOOGLE_CALLBACK}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GITHUB_CALLBACK: ${GITHUB_CALLBACK}
      REACT_APP: ${REACT_APP}
    labels:
    - traefik.enable=true
    - traefik.frontend.rule=Host:auth.webapp.$CLOUD_COMPUTER_HOST_DNS
    - traefik.port=3000
    volumes:
    - /var/lib/docker/volumes/CLOUD_COMPUTER_REPOSITORY/_data/apps/webapp/auth-service/:/usr/src/app
    - /usr/src/app/node_modules
    ports:
    - "${AUTH_SERVICE_PORT}:3000"
    depends_on:
    - postgres

  # Auth service
  stream:
    build:
      context: ./stream-service
      dockerfile: Dockerfile.dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      REDIS_HOST: ${REDIS_HOST}
    labels:
    - traefik.enable=true
    - traefik.frontend.rule=Host:stream.webapp.$CLOUD_COMPUTER_HOST_DNS
    - traefik.port=3000
    volumes:
    -  /var/lib/docker/volumes/CLOUD_COMPUTER_REPOSITORY/_data/apps/webapp/stream-service/:/usr/src/app
    - /usr/src/app/node_modules
    ports:
    - "${STREAM_PORT}:3000"
    depends_on:
    - postgres

  # Mail service
  mail:
    build:
      context: ./mail-service
      dockerfile: Dockerfile.dev
    environment:
      MAIL_SERVICE_DOMAIN: ${MAIL_SERVICE_DOMAIN}
      MAIL_SERVICE_APIKEY: ${MAIL_SERVICE_APIKEY}
    labels:
    - traefik.enable=true
    - traefik.frontend.rule=Host:mail.webapp.$CLOUD_COMPUTER_HOST_DNS
    - traefik.port=3000
    volumes:
    - /var/lib/docker/volumes/CLOUD_COMPUTER_REPOSITORY/_data/apps/webapp/mail-service:/usr/src/app
    - /usr/src/app/node_modules
    ports:
    - "${MAIL_SERVICE_PORT}:3000"
    depends_on:
    - postgres

  # Redis box
  redis:
    image: redis
    restart: always
    ports:
    - "${REDIS_PORT}:6379"

  # Postgres
  postgres:
    image: postgres
    restart: always
    ports:
    - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
