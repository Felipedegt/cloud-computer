{"ast":null,"code":"var _jsxFileName = \"/cloud-computer/cloud-computer/apps/webapp/client/pages/register.js\";\nimport React from \"react\";\nimport { compose } from 'react-apollo';\nimport { Form, Icon, Input, Button, Row, Col, notification } from 'antd';\n/** libs **/\n\nimport { withAuthClient } from '../lib/with-auth-client';\n/** styles **/\n\nconst styles = {\n  image: {\n    width: '300px'\n  },\n  registerForm: {\n    maxWidth: '300px',\n    margin: '12% auto'\n  },\n  registerFormForgot: {\n    float: 'right'\n  },\n  registerFormButton: {\n    width: '100%'\n  }\n};\n\nconst Register = props => {\n  const {\n    getFieldDecorator\n  } = props.form;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields(async (err, {\n      username,\n      password,\n      firstname,\n      lastname\n    }) => {\n      if (!err) {\n        try {\n          await props.authAPI.post('/auth/register', {\n            username,\n            password,\n            firstname,\n            lastname\n          });\n          window.location = '/login';\n        } catch (e) {\n          if (e.message === 'duplicate key value violates unique constraint \"user_username_key\"') {\n            notification.error({\n              message: 'Oh no! Something went wrong',\n              description: 'Username has already been taken'\n            });\n          }\n        }\n      }\n    });\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Col, {\n    offset: 8,\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    style: styles.registerForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: styles.image,\n    src: \"https://avatars3.githubusercontent.com/u/49678748?s=400&u=23aa86cbd4f8d9a5b2c2a8cc744c4d364903a772\",\n    alt: \"Cloud Computer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, getFieldDecorator('username', {\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }),\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"lock\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, getFieldDecorator('firstname', {\n    rules: [{\n      required: true,\n      message: 'Please input your first name!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }),\n    placeholder: \"First name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, getFieldDecorator('lastname', {\n    rules: [{\n      required: true,\n      message: 'Please input your last name!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }),\n    placeholder: \"Last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: styles.registerFormButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Register\")))));\n};\n/** add HOC's need for the component **/\n\n\nexport default compose(Form.create({\n  name: 'register'\n}), withAuthClient)(Register);","map":{"version":3,"sources":["/cloud-computer/cloud-computer/apps/webapp/client/pages/register.js"],"names":["compose","Form","Icon","Input","Button","Row","Col","notification","withAuthClient","styles","image","width","registerForm","maxWidth","margin","registerFormForgot","float","registerFormButton","Register","props","getFieldDecorator","form","handleSubmit","e","preventDefault","validateFields","err","username","password","firstname","lastname","authAPI","post","window","location","message","error","description","rules","required","color","create","name"],"mappings":"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","sourcesContent":["import {compose} from 'react-apollo';\nimport {Form, Icon, Input, Button, Row, Col, notification} from 'antd';\n\n/** libs **/\nimport {withAuthClient} from '../lib/with-auth-client';\n\n/** styles **/\nconst styles = {\n    image : {\n        width: '300px'\n    },\n    registerForm: {\n        maxWidth: '300px',\n        margin: '12% auto'\n    },\n    registerFormForgot: {\n        float: 'right'\n    },\n    registerFormButton: {\n        width: '100%'\n    }\n};\n\nconst Register = (props) => {\n    const {getFieldDecorator} = props.form;\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.form.validateFields(async (err, {username, password, firstname, lastname}) => {\n            if (!err) {\n                try {\n                    await props.authAPI.post('/auth/register', {\n                        username,\n                        password,\n                        firstname,\n                        lastname\n                    });\n                    window.location = '/login';\n                } catch (e) {\n                    if(e.message === 'duplicate key value violates unique constraint \"user_username_key\"') {\n                        notification.error({\n                            message: 'Oh no! Something went wrong',\n                            description:\n                                'Username has already been taken',\n                        });\n                    }\n                }\n            }\n        });\n    };\n    return (\n        <Row>\n            <Col offset={8} span={8}>\n                <Form onSubmit={handleSubmit} style={styles.registerForm}>\n                    <img\n                        style={styles.image}\n                        src=\"https://avatars3.githubusercontent.com/u/49678748?s=400&amp;u=23aa86cbd4f8d9a5b2c2a8cc744c4d364903a772\"\n                        alt=\"Cloud Computer\"/>\n                    <h1>Register</h1>\n                    <Form.Item>\n                        {getFieldDecorator('username', {\n                            rules: [{required: true, message: 'Please input your username!'}],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                placeholder=\"Username\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('password', {\n                            rules: [{required: true, message: 'Please input your Password!'}],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('firstname', {\n                            rules: [{required: true, message: 'Please input your first name!'}],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                placeholder=\"First name\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('lastname', {\n                            rules: [{required: true, message: 'Please input your last name!'}],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                placeholder=\"Last name\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\"\n                                htmlType=\"submit\"\n                                style={styles.registerFormButton}>\n                            Register\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Col>\n        </Row>\n    );\n};\n\n\n/** add HOC's need for the component **/\nexport default compose(\n    Form.create({name: 'register'}),\n    withAuthClient\n)(Register);"]},"metadata":{},"sourceType":"module"}