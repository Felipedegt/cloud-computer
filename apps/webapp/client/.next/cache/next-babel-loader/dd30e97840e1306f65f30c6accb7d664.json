{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/cloud-computer/cloud-computer/apps/webapp/client/lib/with-protect-route.js\";\nimport React from \"react\";\nimport { withRouter } from 'next/router';\nimport { AUTH_TOKEN } from '../constants';\nexport const withProtectRoute = BaseComponent => withRouter((_ref) => {\n  let props = _Object$assign({}, _ref);\n\n  if (process.browser && props.router.query && props.router.query.token) {\n    localStorage.setItem(AUTH_TOKEN, props.router.query.token);\n    window.location = '/';\n    return;\n  }\n\n  if (process.browser && !localStorage.getItem(AUTH_TOKEN)) {\n    window.location = '/login'; // Add loading...\n\n    return;\n  }\n  /** This is for handling the index page cause its being used\n   * for handling the token\n   */\n\n\n  let token;\n\n  if (process.browser) {\n    token = localStorage.getItem(AUTH_TOKEN);\n  }\n\n  if (!token) {\n    return \"Loading...\";\n  }\n\n  return React.createElement(BaseComponent, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/cloud-computer/cloud-computer/apps/webapp/client/lib/with-protect-route.js"],"names":["withRouter","AUTH_TOKEN","withProtectRoute","BaseComponent","props","process","browser","router","query","token","localStorage","setItem","window","location","getItem"],"mappings":";;;;AAAA,SAAQA,UAAR,QAAyB,aAAzB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,aAAD,IAAmBH,UAAU,CAAC,UAAgB;AAAA,MAAXI,KAAW;;AAC1E,MAAGC,OAAO,CAACC,OAAR,IAAmBF,KAAK,CAACG,MAAN,CAAaC,KAAhC,IAAyCJ,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,KAA/D,EAAuE;AACnEC,IAAAA,YAAY,CAACC,OAAb,CAAqBV,UAArB,EAAgCG,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,KAAnD;AACAG,IAAAA,MAAM,CAACC,QAAP,GAAiB,GAAjB;AACA;AACH;;AAED,MAAGR,OAAO,CAACC,OAAR,IAAmB,CAACI,YAAY,CAACI,OAAb,CAAqBb,UAArB,CAAvB,EAAyD;AACrDW,IAAAA,MAAM,CAACC,QAAP,GAAkB,QAAlB,CADqD,CAErD;;AACA;AACH;AAED;;;;;AAGA,MAAIJ,KAAJ;;AACA,MAAGJ,OAAO,CAACC,OAAX,EAAoB;AAChBG,IAAAA,KAAK,GAAGC,YAAY,CAACI,OAAb,CAAqBb,UAArB,CAAR;AACH;;AAED,MAAG,CAACQ,KAAJ,EAAW;AACP,WAAO,YAAP;AACH;;AAED,SAAO,oBAAC,aAAD,eAAmBL,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CA1B4D,CAAtD","sourcesContent":["import {withRouter} from 'next/router';\nimport {AUTH_TOKEN} from '../constants';\n\nexport const withProtectRoute = (BaseComponent) => withRouter(({...props}) => {\n    if(process.browser && props.router.query && props.router.query.token ) {\n        localStorage.setItem(AUTH_TOKEN,props.router.query.token);\n        window.location ='/';\n        return;\n    }\n\n    if(process.browser && !localStorage.getItem(AUTH_TOKEN)) {\n        window.location = '/login';\n        // Add loading...\n        return;\n    }\n\n    /** This is for handling the index page cause its being used\n     * for handling the token\n     */\n    let token;\n    if(process.browser) {\n        token = localStorage.getItem(AUTH_TOKEN);\n    }\n\n    if(!token) {\n        return \"Loading...\"\n    }\n\n    return <BaseComponent {...props}/>\n});"]},"metadata":{},"sourceType":"module"}