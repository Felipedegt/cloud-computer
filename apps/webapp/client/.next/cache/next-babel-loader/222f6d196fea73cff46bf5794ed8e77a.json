{"ast":null,"code":"var _jsxFileName = \"/cloud-computer/cloud-computer/apps/webapp/client/pages/login.js\";\nimport React from \"react\";\nimport { compose } from 'react-apollo';\nimport Link from 'next/link';\nimport { Form, Icon, Input, Button, Checkbox, Row, Col, notification } from 'antd';\n/** libs **/\n\nimport { withAuthClient } from '../lib/with-auth-client';\n/** constants **/\n\nimport { AUTH_TOKEN } from '../constants';\n/** styles **/\n\nconst styles = {\n  image: {\n    width: '300px'\n  },\n  loginForm: {\n    maxWidth: '300px',\n    margin: '12% auto'\n  },\n  loginFormForgot: {\n    float: 'right'\n  },\n  loginFormButton: {\n    width: '100%'\n  },\n  loginGoogle: {\n    width: '100%'\n  },\n  loginGithub: {\n    width: '100%'\n  }\n};\n\nconst Login = props => {\n  const {\n    getFieldDecorator\n  } = props.form;\n  const {\n    authAPI\n  } = props;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields(async (err, {\n      username,\n      password\n    }) => {\n      if (!err) {\n        console.log('Received values of form: ', {\n          username,\n          password\n        });\n\n        try {\n          const result = await authAPI.post('/auth/login', {\n            username,\n            password\n          });\n          localStorage.setItem(AUTH_TOKEN, result.token);\n          window.location = '/';\n        } catch (e) {\n          notification.error({\n            message: 'Oh no! Something went wrong',\n            description: e.message\n          });\n        }\n      }\n    });\n  };\n\n  return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Col, {\n    offset: 8,\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    style: styles.loginForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: styles.image,\n    src: \"https://avatars3.githubusercontent.com/u/49678748?s=400&u=23aa86cbd4f8d9a5b2c2a8cc744c4d364903a772\",\n    alt: \"Cloud Computer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, getFieldDecorator('username', {\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }),\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"lock\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, getFieldDecorator('remember', {\n    valuePropName: 'checked',\n    initialValue: true\n  })(React.createElement(Checkbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Remember me\")), React.createElement(\"a\", {\n    style: styles.loginFormForgot,\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Forgot password\"), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: styles.loginFormButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Log in\"), React.createElement(Button, {\n    icon: \"google\",\n    style: styles.loginGoogle,\n    onClick: () => window.location = process.env.GOOGLE_REDIRECT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Sign-In with Google\"), React.createElement(Button, {\n    icon: \"github\",\n    style: styles.loginGithub,\n    onClick: () => window.location = process.env.GITHUB_REDIRECT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Sign-In with Github\"), \"Or \", React.createElement(Link, {\n    href: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"enquire now!\"))))));\n};\n/** add HOC's need for the component **/\n\n\nexport default compose(Form.create({\n  name: 'login'\n}), withAuthClient)(Login);","map":{"version":3,"sources":["/cloud-computer/cloud-computer/apps/webapp/client/pages/login.js"],"names":["compose","Link","Form","Icon","Input","Button","Checkbox","Row","Col","notification","withAuthClient","AUTH_TOKEN","styles","image","width","loginForm","maxWidth","margin","loginFormForgot","float","loginFormButton","loginGoogle","loginGithub","Login","props","getFieldDecorator","form","authAPI","handleSubmit","e","preventDefault","validateFields","err","username","password","console","log","result","post","localStorage","setItem","token","window","location","error","message","description","rules","required","color","valuePropName","initialValue","process","env","GOOGLE_REDIRECT","GITHUB_REDIRECT","create","name"],"mappings":"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","sourcesContent":["import {compose} from 'react-apollo';\nimport Link from 'next/link';\nimport {Form, Icon, Input, Button, Checkbox, Row, Col, notification} from 'antd';\n\n/** libs **/\nimport {withAuthClient} from '../lib/with-auth-client';\n\n/** constants **/\nimport {AUTH_TOKEN} from '../constants';\n\n/** styles **/\nconst styles = {\n    image : {\n      width: '300px'\n    },\n    loginForm: {\n        maxWidth: '300px',\n        margin: '12% auto'\n    },\n    loginFormForgot: {\n        float: 'right'\n    },\n    loginFormButton: {\n        width: '100%'\n    },\n    loginGoogle: {\n        width: '100%'\n    },\n    loginGithub: {\n        width: '100%'\n    }\n};\n\n\nconst Login = (props) => {\n    const {getFieldDecorator} = props.form;\n    const {authAPI} = props;\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.form.validateFields(async (err, {username, password}) => {\n            if (!err) {\n                console.log('Received values of form: ', {username, password});\n                try {\n                    const result = await authAPI.post('/auth/login', {\n                        username,\n                        password\n                    });\n                    localStorage.setItem(AUTH_TOKEN,result.token);\n                    window.location = '/';\n                } catch (e) {\n                    notification.error({\n                        message: 'Oh no! Something went wrong',\n                        description: e.message\n                    });\n                }\n            }\n        });\n    };\n    return (\n        <Row>\n            <Col offset={8} span={8}>\n                <Form onSubmit={handleSubmit} style={styles.loginForm}>\n                    <img\n                        style={styles.image}\n                        src=\"https://avatars3.githubusercontent.com/u/49678748?s=400&amp;u=23aa86cbd4f8d9a5b2c2a8cc744c4d364903a772\"\n                        alt=\"Cloud Computer\"/>\n                    <Form.Item>\n                        {getFieldDecorator('username', {\n                            rules: [{required: true, message: 'Please input your username!'}],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                placeholder=\"Username\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('password', {\n                            rules: [{required: true, message: 'Please input your Password!'}],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('remember', {\n                            valuePropName: 'checked',\n                            initialValue: true,\n                        })(<Checkbox>Remember me</Checkbox>)}\n                        <a style={styles.loginFormForgot} href=\"\">\n                            Forgot password\n                        </a>\n                        <Button type=\"primary\" htmlType=\"submit\" style={styles.loginFormButton}>\n                            Log in\n                        </Button>\n                        <Button icon=\"google\" style={styles.loginGoogle} onClick={()=>window.location = process.env.GOOGLE_REDIRECT}>\n                            Sign-In with Google\n                        </Button>\n                        <Button icon=\"github\" style={styles.loginGithub} onClick={()=>window.location = process.env.GITHUB_REDIRECT}>\n                            Sign-In with Github\n                        </Button>\n                        Or <Link href=\"/register\"><a>enquire now!</a></Link>\n                    </Form.Item>\n                </Form>\n            </Col>\n        </Row>\n    );\n};\n\n\n/** add HOC's need for the component **/\nexport default compose(\n    Form.create({name: 'login'}),\n    withAuthClient\n)(Login);\n"]},"metadata":{},"sourceType":"module"}