{
  "builders": [
    {
      "account_file": "{{ user `CLOUD_COMPUTER_CREDENTIALS` }}/cloud-provider.json",
      "disk_size": "100",
      "image_name": "cloud-computer",
      "instance_name": "cloud-computer-packer-{{ timestamp }}",
      "project_id": "{{ user `CLOUD_COMPUTER_CLOUD_PROVIDER_PROJECT` }}",
      "source_image_family": "ubuntu-1804-lts",
      "ssh_username": "root",
      "ssh_timeout": "10m",
      "state_timeout": "15m",
      "type": "googlecompute",
      "zone": "us-west2-a"
    }
  ],
  "provisioners": [
    {
      "inline": [
        "# Install docker",
        "apt-get update -qq",
        "apt-get install -qq software-properties-common",
        "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -",
        "add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"",
        "apt-get install -qq docker-ce",

        "groupmod --gid 999 docker",
        "usermod --append --groups docker ubuntu",

        "# Install nvidia cuda",
        "apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1810/x86_64/7fa2af80.pub",
        "wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1810/x86_64/cuda-repo-ubuntu1810_10.1.168-1_amd64.deb",
        "dpkg -i cuda-repo-ubuntu1810_10.1.168-1_amd64.deb",
        "apt-get -qq update",
        "DEBIAN_FRONTEND=noninteractive apt-get install -qq cuda",

        "# Install nvidia-docker2",
        "curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | apt-key add -",
        "curl -s -L https://nvidia.github.io/nvidia-docker/$(. /etc/os-release;echo $ID$VERSION_ID)/nvidia-docker.list | tee /etc/apt/sources.list.d/nvidia-docker.list",
        "apt-get -qq update",
        "apt-get install -qq nvidia-docker2",

        "# Cache cloud-computer docker images",
        "docker pull cloudnativecomputer/alertmanager:latest &",
        "docker pull cloudnativecomputer/blender:latest &",
        "docker pull cloudnativecomputer/chrome:latest &",
        "docker pull cloudnativecomputer/cloud-computer:latest &",
        "docker pull cloudnativecomputer/cloudstorage:latest &",
        "docker pull cloudnativecomputer/code:latest &",
        "docker pull cloudnativecomputer/darktable:latest &",
        "docker pull cloudnativecomputer/desktop:latest &",
        "docker pull cloudnativecomputer/dispatch:latest &",
        "docker pull cloudnativecomputer/filerun:latest &",
        "docker pull cloudnativecomputer/gnumeric:latest &",
        "docker pull cloudnativecomputer/grafana:latest &",
        "docker pull cloudnativecomputer/kicad:latest &",
        "docker pull cloudnativecomputer/krita:latest &",
        "docker pull cloudnativecomputer/launcher:latest &",
        "docker pull cloudnativecomputer/marketplace:latest &",
        "docker pull cloudnativecomputer/notion:latest &",
        "docker pull cloudnativecomputer/onlyoffice-excel:latest &",
        "docker pull cloudnativecomputer/onlyoffice-powerpoint:latest &",
        "docker pull cloudnativecomputer/onlyoffice-word:latest &",
        "docker pull cloudnativecomputer/postman:latest &",
        "docker pull cloudnativecomputer/prometheus:latest &",
        "docker pull cloudnativecomputer/skype:latest &",
        "docker pull cloudnativecomputer/slack:latest &",
        "docker pull dorowu/ubuntu-desktop-lxde-vnc:latest &",
        "docker pull dougw/novnc:latest &",
        "docker pull gliderlabs/logspout:latest &",
        "docker pull google/cadvisor:latest &",
        "docker pull google/cloud-sdk:latest &",
        "docker pull jaegertracing/all-in-one:latest &",
        "docker pull mariadb:10.1 &",
        "docker pull mariadb:latest &",
        "docker pull onlyoffice/documentserver:latest &",
        "docker pull prom/node-exporter:latest &",
        "docker pull prom/pushgateway:latest &",
        "docker pull thomseddon/traefik-forward-auth:latest &",
        "docker pull traefik:1.7 &",
        "docker pull traefik:latest &",
        "docker pull wernight/docker-compose:latest &",
        "wait"
      ],
      "type": "shell"
    }
  ],
  "variables": {
    "CLOUD_COMPUTER_CLOUD_PROVIDER_PROJECT": "{{ env `CLOUD_COMPUTER_CLOUD_PROVIDER_PROJECT` }}",
    "CLOUD_COMPUTER_CREDENTIALS": "{{ env `CLOUD_COMPUTER_CREDENTIALS` }}",
    "CLOUD_COMPUTER_IMAGE": "{{ env `CLOUD_COMPUTER_IMAGE` }}"
  }
}
