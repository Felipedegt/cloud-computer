version: '3.5'

volumes:
    prometheus_data:
    grafana_data:

services:

  prometheus:
    image: cloudnativecomputer/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: cloudnativecomputer/alertmanager:latest
    container_name: alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.18.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: cloudnativecomputer/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    entrypoint: /etc/grafana/setup.sh
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=cloudcomputer
      - GF_AUTH_ANONYMOUS_ORG_ROLE=editor
      - GF_AUTH_PROXY_ENABLED=false
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: 'true'
      traefik.frontend.rule: 'Host:grafana.$CLOUD_COMPUTER_HOST_DNS'
      traefik.port: 3000

  pushgateway:
    image: prom/pushgateway:v0.8.0
    container_name: pushgateway
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
